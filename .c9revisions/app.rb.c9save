{"ts":1369691100949,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# Require the bundler gem and then call Bundler.require to load in all gems\n# listed in Gemfile.\nrequire 'bundler'\nBundler.require\n\n# Setup DataMapper with a database URL. On Heroku, ENV['DATABASE_URL'] will be\n# set, when working locally this line will fall back to using SQLite in the\n# current directory.\nDataMapper.setup(:default, ENV['DATABASE_URL'] || \"sqlite://#{Dir.pwd}/development.sqlite\")\n\n# Define a simple DataMapper model.\nclass Thing\n  include DataMapper::Resource\n\n  property :id, Serial, :key => true\n  property :created_at, DateTime\n  property :title, String, :length => 255\n  property :description, Text\nend\n\n# Finalize the DataMapper models.\nDataMapper.finalize\n\n# Tell DataMapper to update the database according to the definitions above.\nDataMapper.auto_upgrade!\n\nget '/' do\n  send_file './public/index.html'\nend\n\n# Route to show all Things, ordered like a blog\nget '/things' do\n  content_type :json\n  @things = Thing.all(:order => :created_at.desc)\n\n  @things.to_json\nend\n\n# CREATE: Route to create a new Thing\npost '/things' do\n  content_type :json\n\n  # These next commented lines are for if you are using Backbone.js\n  # JSON is sent in the body of the http request. We need to parse the body\n  # from a string into JSON\n  # params_json = JSON.parse(request.body.read)\n\n  # If you are using jQuery's ajax functions, the data goes through in the\n  # params.\n  @thing = Thing.new(params)\n\n  if @thing.save\n    @thing.to_json\n  else\n    halt 500\n  end\nend\n\n# READ: Route to show a specific Thing based on its `id`\nget '/things/:id' do\n  content_type :json\n  @thing = Thing.get(params[:id])\n\n  if @thing\n    @thing.to_json\n  else\n    halt 404\n  end\nend\n\n# UPDATE: Route to update a Thing\nput '/things/:id' do\n  content_type :json\n\n  # These next commented lines are for if you are using Backbone.js\n  # JSON is sent in the body of the http request. We need to parse the body\n  # from a string into JSON\n  # params_json = JSON.parse(request.body.read)\n\n  # If you are using jQuery's ajax functions, the data goes through in the\n  # params.\n\n  @thing = Thing.get(params[:id])\n  @thing.update(params)\n\n  if @thing.save\n    @thing.to_json\n  else\n    halt 500\n  end\nend\n\n# DELETE: Route to delete a Thing\ndelete '/things/:id/delete' do\n  content_type :json\n  @thing = Thing.get(params[:id])\n\n  if @thing.destroy\n    {:success => \"ok\"}.to_json\n  else\n    halt 500\n  end\nend\n\n# If there are no Things in the database, add a few.\nif Thing.count == 0\n  Thing.create(:title => \"Test Thing One\", :description => \"Sometimes I eat pizza.\")\n  Thing.create(:title => \"Test Thing Two\", :description => \"Other times I eat cookies.\")\nend"]],"start1":0,"start2":0,"length1":0,"length2":2640}]],"length":2640}
{"contributors":[],"silentsave":false,"ts":1369696877663,"patch":[[{"diffs":[[0,"hing.new"],[1,"#"],[0,"(params)"],[1,"\n  @thing.title = params[:title]\n  @think.description = params[:description]"],[0,"\n\n  if @"]],"start1":1394,"start2":1394,"length1":24,"length2":101}]],"length":2717,"saved":false}
{"ts":1369696938991,"patch":[[{"diffs":[[0,"\n  @thin"],[-1,"k"],[1,"g"],[0,".descrip"]],"start1":1443,"start2":1443,"length1":17,"length2":17}]],"length":2717,"saved":false}
{"ts":1369697001719,"patch":[[{"diffs":[[0," params["],[-1,":"],[1,"\""],[0,"title"],[1,"\""],[0,"]\n  @thi"]],"start1":1428,"start2":1428,"length1":22,"length2":23},{"diffs":[[0," params["],[-1,":"],[1,"\""],[0,"descript"]],"start1":1467,"start2":1467,"length1":17,"length2":17},{"diffs":[[0,"cription"],[1,"\""],[0,"]\n\n  if "]],"start1":1479,"start2":1479,"length1":16,"length2":17}]],"length":2719,"saved":false}
{"ts":1369697103070,"patch":[[{"diffs":[[0,"params)\n"],[1,"  binding.pry\n"],[0,"  @thing"]],"start1":1404,"start2":1404,"length1":16,"length2":30}]],"length":2733,"saved":false}
{"ts":1369697451046,"patch":[[{"diffs":[[0,"undler'\n"],[1,"require 'pry'\n"],[0,"Bundler."]],"start1":107,"start2":107,"length1":16,"length2":30}]],"length":2747,"saved":false}
{"ts":1369697948373,"patch":[[{"diffs":[[0,"ring into JSON\n "],[-1," #"],[0," params_json = J"]],"start1":1245,"start2":1245,"length1":34,"length2":32},{"diffs":[[0,"hing.new"],[-1,"#"],[0,"(params)"]],"start1":1406,"start2":1406,"length1":17,"length2":16},{"diffs":[[0,".pry"],[-1,"\n  @thing.title = params[\"title\"]\n  @thing.description = params[\"description\"]"],[0,"\n\n  "]],"start1":1432,"start2":1432,"length1":86,"length2":8}]],"length":2666,"saved":false}
{"ts":1369698015960,"patch":[[{"diffs":[[0,"params.\n"],[1,"  binding.pry\n"],[0,"  @thing"]],"start1":1386,"start2":1386,"length1":16,"length2":30},{"diffs":[[0,"rams)\n  "],[-1,"binding.pry"],[0,"\n\n  if @"]],"start1":1431,"start2":1431,"length1":27,"length2":16}]],"length":2669,"saved":false}
{"ts":1369698097890,"patch":[[{"diffs":[[0,"ms.\n"],[-1,"  binding.pry\n"],[0,"  @t"]],"start1":1390,"start2":1390,"length1":22,"length2":8},{"diffs":[[0,"w(params"],[1,"_json"],[0,")\n  \n\n  "]],"start1":1413,"start2":1413,"length1":16,"length2":21}]],"length":2660,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369767368000,"patch":[[{"diffs":[[0,"re '"],[-1,"pry'\nBundler.require"],[1,"sinatra/cross_origin'\nBundler.require\n\nset :allow_origin, :any"],[0,"\n\n# "]],"start1":120,"start2":120,"length1":28,"length2":70}]],"length":2702,"saved":false}
{"ts":1369767509239,"patch":[[{"diffs":[[0,"in, :any"],[1,"\nset :allow_methods, [:post, :get, :put, :delete, :options]"],[0,"\n\n# Setu"]],"start1":178,"start2":178,"length1":16,"length2":75}]],"length":2761,"saved":false}
{"ts":1369767882872,"patch":[[{"diffs":[[0,"re\n\n"],[-1,"set :allow_origin, :any\nset"],[1,"configure do\n  enable :cross_origin\n "],[0," :al"]],"start1":159,"start2":159,"length1":35,"length2":45},{"diffs":[[0,"t, :get,"],[1," :options,"],[0," :put, :"]],"start1":222,"start2":222,"length1":16,"length2":26},{"diffs":[[0,"lete"],[-1,", :options]"],[1,"]\nend"],[0,"\n\n# "]],"start1":250,"start2":250,"length1":19,"length2":13}]],"length":2775,"saved":false}
{"ts":1369767904956,"patch":[[{"diffs":[[0,"rigin\n  "],[-1,":"],[0,"allow_me"]],"start1":193,"start2":193,"length1":17,"length2":16}]],"length":2774,"saved":false}
{"ts":1369767924572,"patch":[[{"diffs":[[0,"rigin\n  "],[1,"set :"],[0,"allow_me"]],"start1":193,"start2":193,"length1":16,"length2":21}]],"length":2779,"saved":false}
{"ts":1369768013838,"patch":[[{"diffs":[[0,"et '/things' do\n"],[1,"  cross_origin\n"],[0,"  content_type :"]],"start1":1018,"start2":1018,"length1":32,"length2":47},{"diffs":[[0,"tent_type :json\n"],[-1,""],[0,"  @things = Thin"]],"start1":1054,"start2":1054,"length1":32,"length2":32},{"diffs":[[0,"/things' do\n"],[1,"  cross_origin\n"],[0,"  content_ty"]],"start1":1188,"start2":1188,"length1":24,"length2":39},{"diffs":[[0,"/things/:id' do\n"],[1,"  cross_origin\n"],[0,"  content_type :"]],"start1":1710,"start2":1710,"length1":32,"length2":47},{"diffs":[[0,"ngs/:id' do\n"],[1,"  cross_origin\n"],[0,"  content_ty"]],"start1":1902,"start2":1902,"length1":24,"length2":39},{"diffs":[[0,"a Thing\n"],[-1,""],[0,"delete '"]],"start1":2412,"start2":2412,"length1":16,"length2":16},{"diffs":[[0,"ete' do\n"],[1,"  cross_origin\n"],[0,"  conten"]],"start1":2443,"start2":2443,"length1":16,"length2":31}]],"length":2854,"saved":false}
{"ts":1369768035908,"patch":[[{"diffs":[[0,"re\n\n"],[-1,"configure do\n  enable :cross_origin\n  set :allow_methods, [:post, :get, :options, :put, :delete]\nend\n\n"],[0,"# Se"]],"start1":159,"start2":159,"length1":110,"length2":8}]],"length":2752,"saved":false}
{"ts":1369768231827,"patch":[[{"diffs":[[0,"equire\n\n"],[1,"set :allow_origin, :any\n\n"],[0,"# Setup "]],"start1":155,"start2":155,"length1":16,"length2":41}]],"length":2777,"saved":false}
{"ts":1369768374964,"patch":[[{"diffs":[[0,"re\n\n"],[-1,"set :allow"],[1,"configure do\n  enable :cross"],[0,"_origin"],[-1,", :any"],[1,"\nend"],[0,"\n\n# "]],"start1":159,"start2":159,"length1":31,"length2":47},{"diffs":[[0,"/things' do\n"],[-1,"  cross_origin\n"],[0,"  content_ty"]],"start1":961,"start2":961,"length1":39,"length2":24},{"diffs":[[0,"/things' do\n"],[-1,"  cross_origin\n"],[0,"  content_ty"]],"start1":1112,"start2":1112,"length1":39,"length2":24},{"diffs":[[0,"ngs/:id' do\n"],[-1,"  cross_origin\n"],[0,"  content_ty"]],"start1":1623,"start2":1623,"length1":39,"length2":24},{"diffs":[[0,"ngs/:id' do\n"],[-1,"  cross_origin\n"],[0,"  content_ty"]],"start1":1796,"start2":1796,"length1":39,"length2":24},{"diffs":[[0,"a Thing\n"],[1,""],[0,"delete '"]],"start1":2291,"start2":2291,"length1":16,"length2":16},{"diffs":[[0," do\n"],[-1,"  cross_origin\n"],[0,"  co"]],"start1":2326,"start2":2326,"length1":23,"length2":8}]],"length":2718,"saved":false}
{"ts":1369768389191,"patch":[[{"diffs":[[0,"equire\n\n"],[1,"module Sinatra\n  register CrossOrigin\nend\n\n"],[0,"configur"]],"start1":155,"start2":155,"length1":16,"length2":59}]],"length":2761,"saved":false}
{"ts":1369768483280,"patch":[[{"diffs":[[0,"ross_origin\n"],[1,"  \n  set :allow_origin, :any\n  set :allow_methods, [:get, :post, :delete, :put, :options]\n  set :allow_credentials, true\n  set :max_age, \"1728000\"\n"],[0,"end\n\n# Setup"]],"start1":230,"start2":230,"length1":24,"length2":171}]],"length":2908,"saved":false}
{"ts":1369768541828,"patch":[[{"diffs":[[0,"gin\n"],[-1,"  \n  set :allow_origin, :any\n  set :allow_methods, [:get, :post, :delete, :put, :options]\n  set :allow_credentials, true\n  set :max_age, \"1728000\"\n"],[0,"end\n"]],"start1":238,"start2":238,"length1":155,"length2":8}]],"length":2761,"saved":false}
{"ts":1369768700740,"patch":[[{"diffs":[[0,"re\n\n"],[-1,"module Sinatra\n  register CrossOrigin\nend\n\n"],[0,"conf"]],"start1":159,"start2":159,"length1":51,"length2":8}]],"length":2718,"saved":false}
{"ts":1369768798402,"patch":[[{"diffs":[[0,"_origin\n"],[1,"  app.set :allow_headers, [\"*\", \"Content-Type\", \"Accept\", \"AUTHORIZATION\", \"Cache-Control\"]\n"],[0,"end\n\n# S"]],"start1":191,"start2":191,"length1":16,"length2":108}]],"length":2810,"saved":false}
{"ts":1369768816481,"patch":[[{"diffs":[[0,"n\n  "],[-1,"app."],[0,"set "]],"start1":197,"start2":197,"length1":12,"length2":8}]],"length":2806,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369768919131,"patch":[[{"diffs":[[0,"origin'\n"],[1,"\n"],[0,"Bundler."]],"start1":138,"start2":138,"length1":16,"length2":17}]],"length":2807,"saved":false}
{"ts":1369768933382,"patch":[[{"diffs":[[0,"n\n  "],[-1,"set :"],[0,"allo"]],"start1":198,"start2":198,"length1":13,"length2":8},{"diffs":[[0,"_headers"],[-1,","],[1," =>"],[0," [\"*\", \""]],"start1":207,"start2":207,"length1":17,"length2":19}]],"length":2804,"saved":false}
{"ts":1369768946170,"patch":[[{"diffs":[[0,"_headers"],[-1," =>"],[1,","],[0," [\"*\", \""]],"start1":207,"start2":207,"length1":19,"length2":17}]],"length":2802,"saved":false}
{"ts":1369768966693,"patch":[[{"diffs":[[0,"rigin\n  "],[1,":"],[0,"allow_he"]],"start1":194,"start2":194,"length1":16,"length2":17}]],"length":2803,"saved":false}
{"ts":1369768978435,"patch":[[{"diffs":[[0,"gin\n"],[-1,"  :allow_headers, [\"*\", \"Content-Type\", \"Accept\", \"AUTHORIZATION\", \"Cache-Control\"]\n"],[0,"end\n"]],"start1":196,"start2":196,"length1":92,"length2":8}]],"length":2719,"saved":false}
{"ts":1369769025715,"patch":[[{"diffs":[[0,"in\nend\n\n"],[1,"set :allow_methods, [:post, :options]\n\n"],[0,"# Setup "]],"start1":197,"start2":197,"length1":16,"length2":55}]],"length":2758,"saved":false}
{"ts":1369769050528,"patch":[[{"diffs":[[0,"_origin\n"],[-1,"end\n\n"],[1,"  "],[0,"set :all"]],"start1":192,"start2":192,"length1":21,"length2":18},{"diffs":[[0,"options]"],[1,"\nend"],[0,"\n\n# Setu"]],"start1":231,"start2":231,"length1":16,"length2":20}]],"length":2759,"saved":false}
{"ts":1369769308954,"patch":[[{"diffs":[[0,"re\n\n"],[-1,"configure do\n  enable :cross_origin\n  set :allow_methods, [:post, :options]\nend\n\n"],[0,"# Se"]],"start1":160,"start2":160,"length1":89,"length2":8}]],"length":2678,"saved":false}
{"ts":1369769555597,"patch":[[{"diffs":[[0,"equire\n\n"],[1,"configure do\n  set :allow_origin, :any\n  set :allow_methods, [:get, :post, :delete, :put, :options]\n  set :allow_credentials, true\n  set :max_age, \"1728000\"\nend\n\n"],[0,"# Setup "]],"start1":156,"start2":156,"length1":16,"length2":178}]],"length":2840,"saved":false}
{"ts":1369769606371,"patch":[[{"diffs":[[0,"re\n\n"],[-1,"configure do\n  "],[1,"\n"],[0,"set "]],"start1":160,"start2":160,"length1":23,"length2":9},{"diffs":[[0,"n, :any\n"],[-1,"  "],[0,"set :all"]],"start1":181,"start2":181,"length1":18,"length2":16},{"diffs":[[0,"ptions]\n"],[-1,"  "],[0,"set :all"]],"start1":240,"start2":240,"length1":18,"length2":16},{"diffs":[[0,"s, true\n"],[-1,"  "],[0,"set :max"]],"start1":269,"start2":269,"length1":18,"length2":16},{"diffs":[[0,"1728000\""],[-1,"\nend"],[0,"\n\n# Setu"]],"start1":292,"start2":292,"length1":20,"length2":16}]],"length":2816,"saved":false}
{"ts":1369769649987,"patch":[[{"diffs":[[0,"equire\n\n"],[1,"set :cross_origin, true"],[0,"\nset :al"]],"start1":156,"start2":156,"length1":16,"length2":39}]],"length":2839,"saved":false}
{"ts":1369769675870,"patch":[[{"diffs":[[0,"ons]"],[-1,"\nset :allow_credentials, true\nset :max_age, \"1728000\""],[0,"\n\n# "]],"start1":266,"start2":266,"length1":61,"length2":8}]],"length":2786,"saved":false}
{"ts":1369769786016,"patch":[[{"diffs":[[0,"options]"],[1,"\nset :allow_headers, [\"*\", \"Content-Type\", \"Accept\", \"AUTHORIZATION\", \"Cache-Control\"]"],[0,"\n\n# Setu"]],"start1":262,"start2":262,"length1":16,"length2":102}]],"length":2872,"saved":false}
{"ts":1369769977516,"patch":[[{"diffs":[[0,"g\npost '/things'"],[1,", provides: :json"],[0," do\n  content_ty"]],"start1":1258,"start2":1258,"length1":32,"length2":49}]],"length":2889,"saved":false}
{"ts":1369769992768,"patch":[[{"diffs":[[0,"s', "],[1,":"],[0,"provides"],[-1,":"],[1," =>"],[0," :js"]],"start1":1272,"start2":1272,"length1":17,"length2":20},{"diffs":[[0,":json do"],[-1,"\n  content_type :json"],[0,"\n\n  # Th"]],"start1":1289,"start2":1289,"length1":37,"length2":16}]],"length":2871,"saved":false}
{"ts":1369770036037,"patch":[[{"diffs":[[0,"ngs'"],[-1,", :provides =>"],[1," do\n  content_type"],[0," :json"],[-1," do"],[0,"\n\n  "]],"start1":1270,"start2":1270,"length1":31,"length2":32}]],"length":2872,"saved":false}
{"ts":1369770043757,"patch":[[{"diffs":[[0,"\"*\","],[-1," \"Content-Type\","],[0," \"Ac"]],"start1":292,"start2":292,"length1":24,"length2":8}]],"length":2856,"saved":false}
{"ts":1369770146032,"patch":[[{"diffs":[[0,", [\""],[-1,"*\", \"Accept\", \"AUTHORIZATION\", \"Cache-Control"],[1,"Origin\", \"X-Requested-With\", \"Content-Type\", \"Accept"],[0,"\"]\n\n"]],"start1":289,"start2":289,"length1":53,"length2":60}]],"length":2863,"saved":false}
{"ts":1369770228506,"patch":[[{"diffs":[[0,"t-Type\","],[1," \"content-type\","],[0," \"Accept"]],"start1":329,"start2":329,"length1":16,"length2":32}]],"length":2879,"saved":false}
{"ts":1369770262546,"patch":[[{"diffs":[[0,"pe\","],[-1," \"content-type\","],[0," \"Ac"]],"start1":333,"start2":333,"length1":24,"length2":8}]],"length":2863,"saved":false}
{"ts":1369770576481,"patch":[[{"diffs":[[0,"ntent_type :json"],[1,"\n  headers \"Access-Control-Allow-Headers\" => \"Content-Type\""],[0,"\n\n  # These next"]],"start1":1273,"start2":1273,"length1":32,"length2":91}]],"length":2922,"saved":false}
{"ts":1369770855551,"patch":[[{"diffs":[[0,"er'\n"],[-1,"require 'sinatra/cross_origin'\n\nBundler.require\n\nset :cross_origin, true\nset :allow_origin, :any\nset :allow_"],[1,"Bundler.require\n\nuse Rack::Cors do\n  # allow do\n  #   origins 'localhost:3000', '127.0.0.1:3000',\n  #           /http:\\/\\/192\\.168\\.0\\.\\d{1,3}(:\\d+)?/\n  #           # regular expressions can be used here\n\n  #   resource '/file/list_all/', :headers => 'x-domain-token'\n  #   resource '/file/at/*',\n  #       :"],[0,"methods"],[-1,","],[1," =>"],[0," [:g"]],"start1":111,"start2":111,"length1":124,"length2":326},{"diffs":[[0,", :post,"],[1," :put,"],[0," :delete"]],"start1":439,"start2":439,"length1":16,"length2":22},{"diffs":[[0,"e, :"],[-1,"put, :options]\nset :allow_headers, [\"Origin\", \"X-Requested-With\", \"Content-Type\", \"Accept\"]"],[1,"options],\n  #       :headers => 'x-domain-token',\n  #       :expose => ['Some-Custom-Response-Header']\n  #       # headers to expose\n  # end\n\n  allow do\n    origins '*'\n    resource '/public/*', :headers => :any, :methods => :get\n  end\nend"],[0,"\n\n# "]],"start1":460,"start2":460,"length1":99,"length2":247}]],"length":3278,"saved":false}
{"ts":1369770919026,"patch":[[{"diffs":[[0,"lic/*', "],[1,"\n      "],[0,":headers"]],"start1":651,"start2":651,"length1":16,"length2":23},{"diffs":[[0,"> :any, "],[1,"\n      "],[0,":methods"]],"start1":676,"start2":676,"length1":16,"length2":23},{"diffs":[[0,"hods => "],[1,"["],[0,":get"],[1,", :post, :put, :delete, :options]"],[0,"\n  end\ne"]],"start1":695,"start2":695,"length1":20,"length2":54}]],"length":3326,"saved":false}
{"ts":1369771078857,"patch":[[{"diffs":[[0,"undler'\n"],[1,"require 'rack/cors'\n"],[0,"Bundler."]],"start1":107,"start2":107,"length1":16,"length2":36}]],"length":3346,"saved":false}
{"ts":1369771137008,"patch":[[{"diffs":[[0,"er'\n"],[-1,"require 'rack/cors'\n"],[0,"Bund"]],"start1":111,"start2":111,"length1":28,"length2":8}]],"length":3326,"saved":false}
{"ts":1369771189433,"patch":[[{"diffs":[[0,"source '"],[-1,"/public/"],[0,"*', \n   "]],"start1":639,"start2":639,"length1":24,"length2":16}]],"length":3318,"saved":false}
{"ts":1369771277560,"patch":[[{"diffs":[[0," do\n"],[-1,"  # allow do\n  #   origins 'localhost:3000', '127.0.0.1:3000',\n  #           /http:\\/\\/192\\.168\\.0\\.\\d{1,3}(:\\d+)?/\n  #           # regular expressions can be used here\n\n  #   resource '/file/list_all/', :headers => 'x-domain-token'\n  #   resource '/file/at/*',\n  #       :methods => [:get, :post, :put, :delete, :options],\n  #       :headers => 'x-domain-token',\n  #       :expose => ['Some-Custom-Response-Header']\n  #       # headers to expose\n  # end\n\n"],[0,"  al"]],"start1":146,"start2":146,"length1":464,"length2":8}]],"length":2862,"saved":false}
